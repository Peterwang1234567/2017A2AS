Peter
1a.
                      BANK ACCOUNT
	PERSONAL ACCOUNT        SAVINGS ACCOUNT
1b.
class BankAccount :
	def __init__(self, m): 
		self.__AccountHolderName = ''
		self.__IBAN = i
	def SetAccountHolderName(self, n):
		self.__AccountHolderName = n
	def GetAccountHolderName(self):
		return(self.__AccountHolderName)
	def GetIBAN(self):
		return(self.__IBAN)
1c 1
Attributes: MonthlyFee, OverDraftLimit

Methods:GetMontlyFee, GetOverDraftLimit, SetOverDraftLimit
   2.

Attributes: InterestRate

Methods: Constructor, CalculateInterest

   3.

Encapsulations

2a.
[SeasonTicketHolder]:

EmailAddress: STRING

GetEmailAddress()

GetTicketHolderName()

[Pay-As-You-Go-TicketHolder]: (bold is for what I did wrong)

PRIVATE

Amount: CURRENCY

PUBLIC

Constructor(Name: STRING, Email: STRING)

GetAmount() UpdateAmount()

[ContractTicketHolder]: (bold is for what I did wrong)

PRIVATE MonthlyFee : CURRENCY

PUBLIC Constructor(Name: STRING, Email : STRING, Fee : CURRENCY) GetFee()

2b 1.
They can only be changed in class methods.

   2.
They can be used to access class attributes anywhere through code easily.

 c.
NewCustomer = ContractTicketHolder("A. Smith","xyz@abc.xx", 10)

3 a.
Containment

 b.
class NodeClass :
	def __init__(self):
		self.__Data = ''
		self.__Pointer = -1
	def SetData(self, m):
		self.__Data = m
	def GetData(self):
		return(self.__Data)
	def SetPointer(self, x):
		self.__Data = x
	def GetPointer(self):
		return(self.__Pointer)

 c.
class QueueClass :
	def __init__(self):
		self.__Queue = [NodeClass() for i in range(51)]
		self.__Head = -1
		self.__Tail = -1


